unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

set-option -g default-terminal "screen-256color"
set-option -g terminal-overrides 'xterm*:smcup@:rmcup@'
set-option -ga terminal-overrides ',xterm-256color:Tc'
set-option -s escape-time 0
set-option -g renumber-windows on
set-option -g base-index 1
set-window-option -g mode-keys vi

# Mouse settings
set-option -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# Integrate pane-switching with vim
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind-key -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# Window/pane management
bind-key -n M-1 select-window -t :1
bind-key -n M-2 select-window -t :2
bind-key -n M-3 select-window -t :3
bind-key -n M-4 select-window -t :4
bind-key -n M-5 select-window -t :5
bind-key -n M-6 select-window -t :6
bind-key -n M-7 select-window -t :7
bind-key -n M-8 select-window -t :8
bind-key -n M-9 select-window -t :9
bind-key -n M-0 select-window -t :0
bind-key -n M-< swap-window -t -1
bind-key -n M-> swap-window -t +1

# Pane Resizing
bind-key -n C-S-up resize-pane -U 5
bind-key -n C-S-down resize-pane -D 5
bind-key -n C-S-left resize-pane -L 5
bind-key -n C-S-right resize-pane -R 5

# Fix clear screen
bind-key C-l send-keys 'C-l'

bind-key P paste-buffer
bind-key -T copy-mode-vi v   send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y   send-keys -X copy-pipe-and-cancel "xclip -i -selection clipboard"
unbind-key -T copy-mode-vi MouseDragEnd1Pane
bind-key -T copy-mode-vi MouseDown1Pane select-pane \; \
    send-keys -X copy-pipe "xclip -i -selection clipboard" \; \
    send-keys -X clear-selection
# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -i -selection clipboard" \; \
#     display-message "Selection copied to CLIPBOARD"

# Window creation and splitting
unbind c
bind-key Enter new-window
bind-key c split-window -c "#{pane_current_path}"
bind-key C split-window -h -c "#{pane_current_path}"

# Reload config
unbind R
bind-key R source-file ~/.tmux.conf \; \
    display-message "Sourced .tmux.conf"

# Status bar
set -g status-bg black
set -g status-fg white
set -g window-status-style fg=black,bright
set -g window-status-current-style fg=white,bright
set -g status-left ''
set -g status-right ''
set -g status-justify centre
set -g status-interval 1
setw -g window-status-format         ' #I:#{?#{==:#W,#{b:SHELL}},#{b:pane_current_path},#W} '
setw -g window-status-current-format ' #I:#{?#{==:#W,#{b:SHELL}},#{b:pane_current_path},#W} '
